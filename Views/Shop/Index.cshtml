
@{
    ViewBag.Title = "Shop";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}

@if (ViewBag.data != null)
{
    HashSet<Project_Final_NF.Models.ModelViews.ProductView> dt = (HashSet<Project_Final_NF.Models.ModelViews.ProductView>)ViewBag.data;

<!-- Nút mở giỏ hàng -->
<div id="cart-icon" onclick="toggleCart()">
    🛒 Cart <span id="cart-count">0</span>
</div>

<!-- Giỏ hàng -->
<div id="cart">
    <div class="cart-close" onclick="toggleCart()">✖</div>
    <h3>Your Cart</h3>
    <div id="cart-items">Cart is empty</div>
    <div class="cart-total" id="cart-total"></div>
    <div class="cart-checkout" onclick="placeOrder()">Checkout</div>
</div>

<!-- Danh sách sản phẩm -->
<section class="shop_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>Latest Products</h2>
        </div>
        <div class="row">
            @if (dt != null)
            {
                foreach (var item in dt)
                {
                    <div class="col-sm-6 col-md-4 col-lg-3">
                        <div class="box">
                            <div class="img-box">
                                <img src="@Url.Content("~/content/client/images/")@item.ImageUrl" alt="@item.Name">
                            </div>
                            <div class="detail-box">
                                <h6>@item.Name</h6>
                                <h6>Price: <span>@(item.Price == 0 ? "???" : item.Price.ToString("C"))</span></h6>
                            </div>
                            <button onclick="addToCart('@item.ProductId', '@item.Name', @item.Price )">Add to Cart</button>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>
}

<!-- JavaScript xử lý giỏ hàng -->
<script>
    let cart = [];

    function toggleCart() {
        document.getElementById("cart").classList.toggle("active");
    }

    function addToCart(productId, name, price, fixedQuantity = 0) {
        let existingItem = cart.find(item => item.productId === productId);

        if (existingItem) {
            if (fixedQuantity === 1) {
                alert("This product can only be added once!");
                return; 
            } 
        } else {
            cart.push({ productId, name, price, quantity: fixedQuantity === 1 ? 1 : 1 });
        }

        updateCartUI();
    }


    function updateCartUI() {
        let cartItemsContainer = document.getElementById("cart-items");
        let cartCount = document.getElementById("cart-count");
        let cartTotal = document.getElementById("cart-total");

        cartItemsContainer.innerHTML = "";
        let total = 0;

        cart.forEach(item => {
            total += item.price * item.quantity;

            cartItemsContainer.innerHTML += `
                <div class="cart-item">
                    <span>${item.name} (x${item.quantity})</span>
                    <span>???</span>
                    <button onclick="removeFromCart('${item.productId}')">❌</button>
                </div>
            `;
        });

        cartTotal.innerText = `Total: ????$`;
        cartCount.innerText = cart.length;
    }

    function removeFromCart(productId) {
        cart = cart.filter(item => item.productId !== productId);
        updateCartUI();
    }

    function placeOrder() {
        if (cart.length === 0) {
            alert("Your cart is empty!");
            return;
        }

        fetch('@Url.Action("PlaceOrder", "Shop")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(cart)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Order placed successfully!");
                    cart = [];
                    updateCartUI();
                } else {
                    alert("Order failed: " + data.message);
                }
            })
            .catch(error => {
                console.error("Error placing order:", error);
                alert("Error placing order!");
            });
    }
</script>

<!-- CSS -->
<style>
    #cart-icon {
        position: fixed;
        top: 20px;
        right: 30px;
        background-color: #ff6f61;
        color: #fff;
        padding: 12px 20px;
        border-radius: 8px;
        cursor: pointer;
        z-index: 999;
    }

        #cart-icon span {
            background-color: #fff;
            color: #ff6f61;
            padding: 4px 8px;
            border-radius: 50%;
            margin-left: 8px;
        }

    #cart {
        position: fixed;
        top: 0;
        right: -400px;
        width: 350px;
        height: 100%;
        background-color: #fff;
        box-shadow: -2px 0 10px rgba(0,0,0,0.3);
        padding: 20px;
        transition: right 0.3s ease;
        z-index: 9999;
    }

        #cart.active {
            right: 0;
        }

    .cart-item {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #ddd;
    }

        .cart-item button {
            background-color: #ff6f61;
            color: white;
            border: none;
            padding: 5px 8px;
            border-radius: 4px;
            cursor: pointer;
        }

    .cart-total {
        font-weight: bold;
        margin-top: 20px;
    }

    .cart-checkout {
        margin-top: 20px;
        width: 100%;
        background-color: #28a745;
        color: white;
        padding: 12px;
        text-align: center;
        border-radius: 6px;
        cursor: pointer;
    }

    .cart-close {
        position: absolute;
        top: 10px;
        right: 15px;
        cursor: pointer;
        font-size: 20px;
        color: #333;
    }

    .product {
        border: 1px solid #ddd;
        padding: 15px;
        text-align: center;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .product img {
            width: 100%;
            height: auto;
        }

        .product button {
            margin-top: 10px;
            background-color: #ff6f61;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 6px;
            cursor: pointer;
        }
</style>
